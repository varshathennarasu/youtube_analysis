{
	"jobConfig": {
		"name": "de-on-youtube-cleansed-csv-to-parquet",
		"description": "",
		"role": "arn:aws:iam::692859918720:role/de-on-youtube-glue-s3-role",
		"command": "glueetl",
		"version": "4.0",
		"runtime": null,
		"workerType": "G.1X",
		"numberOfWorkers": 10,
		"maxCapacity": 10,
		"jobRunQueuingEnabled": false,
		"maxRetries": 0,
		"timeout": 480,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "de-on-youtube-cleansed-csv-to-parquet.py",
		"scriptLocation": "s3://aws-glue-assets-692859918720-us-east-2/scripts/",
		"language": "python-3",
		"spark": false,
		"sparkConfiguration": "standard",
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2025-01-07T07:52:42.459Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://aws-glue-assets-692859918720-us-east-2/temporary/",
		"etlAutoScaling": true,
		"logging": true,
		"glueHiveMetastore": true,
		"etlAutoTuning": true,
		"metrics": true,
		"observabilityMetrics": true,
		"bookmark": "job-bookmark-enable",
		"sparkPath": "s3://aws-glue-assets-692859918720-us-east-2/sparkHistoryLogs/",
		"flexExecution": false,
		"minFlexWorkers": null,
		"maintenanceWindow": null
	},
	"hasBeenSaved": false,
	"usageProfileName": null,
	"script": "import sys\nfrom awsglue.transforms import *\nfrom awsglue.utils import getResolvedOptions\nfrom pyspark.context import SparkContext\nfrom awsglue.context import GlueContext\nfrom awsglue.job import Job\nfrom awsglue.dynamicframe import DynamicFrame\n\n## @params: [JOB_NAME]\nargs = getResolvedOptions(sys.argv, ['JOB_NAME'])\n\nsc = SparkContext()\nglueContext = GlueContext(sc)\nspark = glueContext.spark_session\njob = Job(glueContext)\njob.init(args['JOB_NAME'], args)\n\n# Define Data Source\npredicate_pushdown = \"region in ('ca','gb','us')\"\ndatasource0 = glueContext.create_dynamic_frame.from_catalog(\n    database=\"de_youtube_raw\", \n    table_name=\"raw_statistics\", \n    transformation_ctx=\"datasource0\", \n    push_down_predicate=predicate_pushdown\n)\n\n# Apply Mapping\napplymapping1 = ApplyMapping.apply(\n    frame=datasource0, \n    mappings=[\n        (\"video_id\", \"string\", \"video_id\", \"string\"),\n        (\"trending_date\", \"string\", \"trending_date\", \"string\"),\n        (\"title\", \"string\", \"title\", \"string\"),\n        (\"channel_title\", \"string\", \"channel_title\", \"string\"),\n        (\"category_id\", \"bigint\", \"category_id\", \"bigint\"),\n        (\"publish_time\", \"string\", \"publish_time\", \"string\"),\n        (\"tags\", \"string\", \"tags\", \"string\"),\n        (\"views\", \"bigint\", \"views\", \"bigint\"),\n        (\"likes\", \"bigint\", \"likes\", \"bigint\"),\n        (\"dislikes\", \"bigint\", \"dislikes\", \"bigint\"),\n        (\"comment_count\", \"bigint\", \"comment_count\", \"bigint\"),\n        (\"thumbnail_link\", \"string\", \"thumbnail_link\", \"string\"),\n        (\"comments_disabled\", \"boolean\", \"comments_disabled\", \"boolean\"),\n        (\"ratings_disabled\", \"boolean\", \"ratings_disabled\", \"boolean\"),\n        (\"video_error_or_removed\", \"boolean\", \"video_error_or_removed\", \"boolean\"),\n        (\"description\", \"string\", \"description\", \"string\"),\n        (\"region\", \"string\", \"region\", \"string\"),\n    ], \n    transformation_ctx=\"applymapping1\"\n)\n\n# Resolve Choices and Drop Null Fields\nresolvechoice2 = ResolveChoice.apply(frame=applymapping1, choice=\"make_struct\", transformation_ctx=\"resolvechoice2\")\ndropnullfields3 = DropNullFields.apply(frame=resolvechoice2, transformation_ctx=\"dropnullfields3\")\n\n# Convert to DataFrame, Coalesce, and Write to Target\ndatasink1 = dropnullfields3.toDF().coalesce(1)\ndf_final_output = DynamicFrame.fromDF(datasink1, glueContext, \"df_final_output\")\ndatasink4 = glueContext.write_dynamic_frame.from_options(\n    frame=df_final_output,\n    connection_type=\"s3\",\n    connection_options={\"path\": \"s3://de-on-youtube-cleansed-useast2-dev6/youtube/raw_statistics/\", \"partitionKeys\": [\"region\"]},\n    format=\"parquet\",\n    transformation_ctx=\"datasink4\"\n)\n\njob.commit()"
}